{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developpement\\\\Pro\\\\Projets\\\\Projet 10 OCR\\\\src\\\\containers\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const [nom, setNom] = useState(\"\");\n  const [prenom, setPrenom] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true); // We try to call mockContactApi\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      onSuccess();\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\",\n          value: nom,\n          onChange: e => setNom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\",\n          value: prenom,\n          onChange: e => setPrenom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA,\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"qQqvMu+G00bFkkN5MsKEeV7OZjQ=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/Developpement/Pro/Projets/Projet 10 OCR/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","nom","setNom","prenom","setPrenom","email","setEmail","message","setMessage","sendContact","evt","preventDefault","err","e","target","value","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\r\nimport Select from \"../../components/Select\";\r\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\r\n\r\nconst mockContactApi = () =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, 1000);\r\n  });\r\n\r\nconst Form = ({ onSuccess, onError }) => {\r\n  const [sending, setSending] = useState(false);\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const sendContact = useCallback(\r\n    async (evt) => {\r\n      evt.preventDefault();\r\n      setSending(true);\r\n      // We try to call mockContactApi\r\n      try {\r\n        await mockContactApi();\r\n        setSending(false);      \r\n        onSuccess();\r\n      } catch (err) {\r\n        setSending(false);\r\n        onError(err);\r\n      }\r\n    },\r\n    [onSuccess, onError]\r\n  );\r\n  return (\r\n    <form onSubmit={sendContact}>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n        <Field\r\n            placeholder=\"\"\r\n            label=\"Nom\"\r\n            value={nom}\r\n            onChange={(e) => setNom(e.target.value)}\r\n          />\r\n          <Field\r\n            placeholder=\"\"\r\n            label=\"PrÃ©nom\"\r\n            value={prenom}\r\n            onChange={(e) => setPrenom(e.target.value)}\r\n          />\r\n          <Select\r\n            selection={[\"Personel\", \"Entreprise\"]}\r\n            onChange={() => null}\r\n            label=\"Personel / Entreprise\"\r\n            type=\"large\"\r\n            titleEmpty\r\n          />\r\n          <Field\r\n            placeholder=\"\"\r\n            label=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\r\n            {sending ? \"En cours\" : \"Envoyer\"}\r\n          </Button>          \r\n        </div>\r\n        <div className=\"col\">\r\n          <Field\r\n            placeholder=\"message\"\r\n            label=\"Message\"\r\n            type={FIELD_TYPES.TEXTAREA}\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onError: PropTypes.func,\r\n  onSuccess: PropTypes.func,\r\n}\r\n\r\nForm.defaultProps = {\r\n  onError: () => null,\r\n  onSuccess: () => null,\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}