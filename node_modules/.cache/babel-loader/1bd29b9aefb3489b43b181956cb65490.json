{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developpement\\\\Pro\\\\Projets\\\\Projet 10 OCR\\\\src\\\\containers\\\\Slider\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const {\n    data\n  } = useData();\n  const [index, setIndex] = useState(0);\n  const [timeoutId, setTimeoutId] = useState(null);\n  const byDateDesc = data === null || data === void 0 ? void 0 : data.focus.sort((evtA, evtB) => new Date(evtA.date) < new Date(evtB.date) ? -1 : 1);\n\n  const nextCard = () => {\n    setTimeoutId(setTimeout(() => {\n      setIndex(prevIndex => prevIndex < ((byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.length) || 0) - 1 ? prevIndex + 1 : 0);\n    }, 5000));\n  };\n\n  useEffect(() => {\n    nextCard();\n    return () => clearTimeout(timeoutId);\n  }, [index, timeoutId]);\n\n  const handleClick = radioIdx => {\n    setIndex(radioIdx);\n  };\n\n  if (!byDateDesc) {\n    return null; // You can render a fallback UI or loading spinner here if needed\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateDesc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: \"forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, event.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateDesc.map((event, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\",\n          checked: index === radioIdx,\n          onChange: () => handleClick(radioIdx)\n        }, `${event.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"cAxAny5xWena41v6eUxeUmSoyYo=\", false, function () {\n  return [useData];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["D:/Developpement/Pro/Projets/Projet 10 OCR/src/containers/Slider/index.js"],"names":["useEffect","useState","useData","getMonth","Slider","data","index","setIndex","timeoutId","setTimeoutId","byDateDesc","focus","sort","evtA","evtB","Date","date","nextCard","setTimeout","prevIndex","length","clearTimeout","handleClick","radioIdx","map","event","idx","cover","title","description","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport { getMonth } from \"../../helpers/Date\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Slider = () => {\r\n  const { data } = useData();\r\n  const [index, setIndex] = useState(0);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const byDateDesc = data?.focus.sort((evtA, evtB) =>\r\n    new Date(evtA.date) < new Date(evtB.date) ? -1 : 1\r\n  );\r\n\r\n  const nextCard = () => {\r\n    setTimeoutId(\r\n      setTimeout(() => {\r\n        setIndex((prevIndex) =>\r\n          prevIndex < (byDateDesc?.length || 0) - 1 ? prevIndex + 1 : 0\r\n        );\r\n      }, 5000)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    nextCard();\r\n    return () => clearTimeout(timeoutId);\r\n  }, [index, timeoutId]);\r\n\r\n  const handleClick = (radioIdx) => {\r\n    setIndex(radioIdx);\r\n  };\r\n\r\n  if (!byDateDesc) {\r\n    return null; // You can render a fallback UI or loading spinner here if needed\r\n  }\r\n\r\n  return (\r\n    <div className=\"SlideCardList\">\r\n      {byDateDesc.map((event, idx) => (\r\n        <div\r\n          key={event.title}\r\n          className={`SlideCard SlideCard--${\r\n            index === idx ? \"display\" : \"hide\"\r\n          }`}\r\n        >\r\n          <img src={event.cover} alt=\"forum\" />\r\n          <div className=\"SlideCard__descriptionContainer\">\r\n            <div className=\"SlideCard__description\">\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n              <div>{getMonth(new Date(event.date))}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"SlideCard__paginationContainer\">\r\n        <div className=\"SlideCard__pagination\">\r\n          {byDateDesc.map((event, radioIdx) => (\r\n            <input\r\n              key={`${event.id}`}\r\n              type=\"radio\"\r\n              name=\"radio-button\"\r\n              checked={index === radioIdx}\r\n              onChange={() => handleClick(radioIdx)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}