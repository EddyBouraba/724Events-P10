{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developpement\\\\Pro\\\\Projets\\\\Projet 10 OCR\\\\src\\\\containers\\\\Events\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedType, setSelectedType] = useState(null);\n  const filteredEvents = data === null || data === void 0 ? void 0 : data.events.filter(event => {\n    return !selectedType || event.type === selectedType;\n  });\n\n  const changePage = page => {\n    setCurrentPage(page);\n  };\n\n  const changeType = type => {\n    setSelectedType(type);\n    setCurrentPage(1); // Réinitialiser la page actuelle à 1 lors du changement de type\n  };\n\n  const pageNumber = Math.ceil(((filteredEvents === null || filteredEvents === void 0 ? void 0 : filteredEvents.length) || 0) / PER_PAGE);\n  const typeList = Array.from(new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type)));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), data === null ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: typeList,\n        onChange: () => changePage(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => changePage(n + 1),\n          children: n + 1\n        }, `page-${n + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"m1pU0HEJ/+85zrTNg9cc1QtLxw0=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["D:/Developpement/Pro/Projets/Projet 10 OCR/src/containers/Events/index.js"],"names":["useState","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","currentPage","setCurrentPage","selectedType","setSelectedType","filteredEvents","events","filter","event","type","changePage","page","changeType","pageNumber","Math","ceil","length","typeList","Array","from","Set","map","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport EventCard from \"../../components/EventCard\";\r\nimport Select from \"../../components/Select\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport Modal from \"../Modal\";\r\nimport ModalEvent from \"../ModalEvent\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PER_PAGE = 9;\r\n\r\nconst EventList = () => {\r\n  const { data, error } = useData();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedType, setSelectedType] = useState(null);\r\n\r\n  const filteredEvents = data?.events.filter((event) => {\r\n    return !selectedType || event.type === selectedType;\r\n  });\r\n\r\n  const changePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const changeType = (type) => {\r\n    setSelectedType(type);\r\n    setCurrentPage(1); // Réinitialiser la page actuelle à 1 lors du changement de type\r\n  };\r\n\r\n  const pageNumber = Math.ceil((filteredEvents?.length || 0) / PER_PAGE);\r\n  const typeList = Array.from(new Set(data?.events.map((event) => event.type)));\r\n\r\n  return (\r\n    <>\r\n      {error && <div>An error occurred</div>}\r\n      {data === null ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          <h3 className=\"SelectTitle\">Catégories</h3>\r\n          <Select\r\n            selection={typeList}\r\n            onChange={() => changePage(1)}\r\n          />\r\n          <div id=\"events\" className=\"ListContainer\">\r\n            {filteredEvents.map((event) => (\r\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\r\n                {({ setIsOpened }) => (\r\n                  <EventCard\r\n                    key={event.id}\r\n                    onClick={() => setIsOpened(true)}\r\n                    imageSrc={event.cover}\r\n                    title={event.title}\r\n                    date={new Date(event.date)}\r\n                    label={event.type}\r\n                  />\r\n                )}\r\n              </Modal>\r\n            ))}\r\n          </div>\r\n          <div className=\"Pagination\">\r\n            {[...Array(pageNumber)].map((_, n) => (\r\n              <a key={`page-${n + 1}`} href=\"#events\" onClick={() => changePage(n + 1)}>\r\n                {n + 1}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"]},"metadata":{},"sourceType":"module"}